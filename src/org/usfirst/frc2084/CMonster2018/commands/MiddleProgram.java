// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2084.CMonster2018.commands;
import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2084.CMonster2018.Robot;
import org.usfirst.frc2084.CMonster2018.RobotMap;

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.sun.glass.ui.Timer;

/**
 *
 */
public class MiddleProgram extends Command {
	String gameData;
	public static WPI_TalonSRX leftTalon = RobotMap.driveBaseLeftTalon1;
	public static WPI_TalonSRX rightTalon = RobotMap.driveBaseRightTalon1;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public MiddleProgram() {
    	
    	setTimeout(7);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    	
		//gameData = DriverStation.getInstance().getGameSpecificMessage();
		
		
		
		
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
//    	if(gameData.charAt(0) == 'R') {
//			//run the program that makes the robot go to the right side of the switch to score the cube
//			
//		}
//		
//		else if (gameData.charAt(0) == 'L') {
//			//run the program that makes the robot go to the left side of the switch to score the cube
//		}
    	
    	
    	//USED FOR FORCED OVERRIDE PROGRAM
    	//Robot.driveBase.DriveAutonomous();
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return isTimedOut();
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	leftTalon.set(0);
    	rightTalon.set(0);
    	
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
